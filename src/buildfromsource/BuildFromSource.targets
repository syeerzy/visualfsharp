<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All Rights Reserved.  See License.txt in the project root for license information. -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <FSCoreVersion>4.5.0.0</FSCoreVersion>
    <OutputPath>$(MSBuildThisFileDirectory)../../BuildFromSource/$(Configuration)/bin</OutputPath>
    <FSharpSourcesRoot>$(MSBuildThisFileDirectory)..</FSharpSourcesRoot>

    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <UseStandardResourceNames>false</UseStandardResourceNames>
    <DefineConstants>$(DefineConstants);BUILD_FROM_SOURCE</DefineConstants>

    <!-- Signing flags currently done using OtherFlags.  Can migrate to properties once build target updated -->
    <KeyFile>$(MSBuildThisFileDirectory)../buildtools/keys/MSFT.snk</KeyFile>
    <PublicSign>true</PublicSign>
    <OtherFlags>$(OtherFlags) --publicsign --keyfile:"$(KeyFile)"</OtherFlags>
    <OtherFlags>$(OtherFlags) --nocopyfsharpcore</OtherFlags>

    <DotNetExe Condition=" '$(OS)' == 'Unix' ">dotnet</DotNetExe>
    <DotNetExe Condition=" '$(OS)' != 'Unix' ">dotnet.exe</DotNetExe>
    <!-- When building from source, `dotnet` is expected to be on the path. -->
    <DotNetExePath>$(DotNetExe)</DotNetExePath>

    <PreReleaseLabel></PreReleaseLabel>
    <BuildVersionFilePath Condition="'$(BuildVersionFilePath)'==''" >$(IntermediateOutputFile)\BuildVersionFile.props</BuildVersionFilePath>

  </PropertyGroup>

  <PropertyGroup>
    <TargetDotnetProfile  Condition=" $(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcoreapp1.0')) ">coreclr</TargetDotnetProfile>
    <TargetDotnetProfile  Condition=" $(TargetFramework.StartsWith('netframework')) ">net40</TargetDotnetProfile>
  </PropertyGroup>

  <Import Project="$(BuildVersionFilePath)" Condition="Exists('$(BuildVersionFilePath)')" />

  <ItemGroup>
    <AvailableItemName Include="FsLex">
      <Visible>false</Visible>
    </AvailableItemName>
    <AvailableItemName Include="FsYacc">
      <Visible>false</Visible>
    </AvailableItemName>
  </ItemGroup>

  <!-- Build FsLex files. -->
  <Target Name="CallFsLex"
          Inputs="@(FsLex)"
          Outputs="@(FsLex->'$(FsLexOutputFolder)%(Filename).fs')"
          Condition="'@(FsLex)'!=''"
          BeforeTargets="CoreCompile">

    <PropertyGroup>
        <FsLexPath>$(MSBuildThisFileDirectory)../../Tools/fslex/fslex.dll</FsLexPath>
    </PropertyGroup>

    <!-- Create the output directory -->
    <MakeDir Directories="$(FsLexOutputFolder)"/>

    <!-- Run the tool -->
    <Exec Command="&quot;$(DotNetExePath)&quot; &quot;$(FsLexPath)&quot;  -o &quot;$(FsLexOutputFolder)%(FsLex.Filename).fs&quot; %(FsLex.OtherFlags) %(FsLex.Identity)" />

    <!-- Make sure it will get cleaned  -->
    <CreateItem Include="$(FsLexOutputFolder)%(FsLex.Filename).fs">
      <Output TaskParameter="Include" ItemName="FileWrites"/>
    </CreateItem>
  </Target>

  <!-- Build FsYacc files. -->
  <Target Name="CallFsYacc"
          Inputs="@(FsYacc)"
          Outputs="@(FsYacc->'$(FsYaccOutputFolder)%(Filename).fs')"
          Condition="'@(FsYacc)'!=''"
          BeforeTargets="CoreCompile">

    <PropertyGroup>
        <FsYaccPath>$(MSBuildThisFileDirectory)../../Tools/fsyacc/fsyacc.dll</FsYaccPath>
    </PropertyGroup>

    <!-- Create the output directory -->
    <MakeDir Directories="$(FsYaccOutputFolder)" />

    <!-- Run the tool -->
    <Exec Command="&quot;$(DotNetExePath)&quot; &quot;$(FsYaccPath)&quot;  -o &quot;$(FsYaccOutputFolder)%(FsYacc.Filename).fs&quot; %(FsYacc.OtherFlags) %(FsYacc.Identity)" />

    <!-- Make sure it will get cleaned  -->
    <CreateItem Include="$(FsYaccOutputFolder)%(FsYacc.Filename).fs">
      <Output TaskParameter="Include" ItemName="FileWrites"/>
    </CreateItem>
  </Target>

</Project>
