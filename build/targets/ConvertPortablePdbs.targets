<Project>

  <ItemGroup>
    <PackageReference Include="Pdb2Pdb" Version="$(Pdb2PdbPackageVersion)" />
  </ItemGroup>

  <Target Name="ConvertPortablePdbs"
          AfterTargets="AfterBuild"
          Condition="'$(OS)' != 'Unix' AND
                     Exists('$(TargetPath)') AND
                     ('$(DebugType)' == 'portable' OR '$(DebugType)' == 'embedded') AND
                     $(TargetFramework.StartsWith('net4')) AND
                     '$(Configuration)' != 'Proto'">
    <PropertyGroup>
      <PdbConverterExe>$(NuGetPackageRoot)Pdb2Pdb\$(Pdb2PdbPackageVersion)\tools\Pdb2Pdb.exe</PdbConverterExe>
      <PdbConverterArgs>"$(TargetPath)" /out "$(SymStoreDirectory)\$(TargetName).pdb" /srcsvrvar SRC_INDEX=public</PdbConverterArgs>
    </PropertyGroup>

    <MakeDir Directories="$(SymStoreDirectory)" />
    <Exec Command='"$(PdbConverterExe)" $(PdbConverterArgs)' />
  </Target>

  <Target Name="CopyExtantFullPdbs"
          AfterTargets="AfterBuild"
          Condition="'$(OS)' != 'Unix' AND
                     Exists('$(TargetPath)') AND
                     '$(DebugType)' == 'full' AND
                     $(TargetFramework.StartsWith('net4')) AND
                     '$(Configuration)' != 'Proto'">
    <PropertyGroup>
      <PdbFileName>$(TargetDir)\$(TargetName).pdb</PdbFileName>
    </PropertyGroup>

    <MakeDir Directories="$(SymStoreDirectory)" />
    <Copy SourceFiles="$(PdbFileName)" DestinationFolder="$(SymStoreDirectory)" />
  </Target>

</Project>
